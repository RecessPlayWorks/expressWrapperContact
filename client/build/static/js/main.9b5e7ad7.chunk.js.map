{"version":3,"sources":["subcomponents/MailForm.js","App.js","index.js"],"names":["StyledMailForm","styled","form","MailForm","props","state","email","name","message","changeHandler","bind","submitHandler","e","this","setState","target","value","preventDefault","axios","post","console","log","onSubmit","htmlFor","onChange","className","type","placeholder","Component","App","ReactDOM","render","document","getElementById"],"mappings":"+qCAOA,IAAMA,EAAiBC,IAAOC,KAAV,KAwHLC,E,YAjFf,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,MAAO,GACPC,KAAM,GACNC,QAAS,IAEb,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBARN,E,2EAWLE,GACVC,KAAKC,SAAL,eAAgBF,EAAEG,OAAOR,KAAOK,EAAEG,OAAOC,U,6EAGrBJ,G,oFAChBA,EAAEK,iB,EAC+BJ,KAAKR,MAA9BC,E,EAAAA,MAAOC,E,EAAAA,KAAMC,E,EAAAA,Q,kBAQEU,IAAMC,KAAK,YAC1B,CACIZ,OACAD,QACAE,Y,8DAKRY,QAAQC,IAAR,M,+IAIK,IAAD,EAC0BR,KAAKR,MAA7BC,EADF,EACEA,MAAOC,EADT,EACSA,KAAMC,EADf,EACeA,QACpB,OACI,kBAACR,EAAD,CAAgBsB,SAAUT,KAAKF,eAClC,kCACI,kDACA,2BAAOY,QAAQ,QAAf,QACA,2BACAC,SAAUX,KAAKJ,cACfgB,UAAU,OACVlB,KAAK,OACLmB,KAAK,OACLC,YAAY,OACZX,MAAOT,IAEP,2BAAOgB,QAAQ,SAAf,SACA,2BACAC,SAAUX,KAAKJ,cACfgB,UAAU,QACVlB,KAAK,QACLmB,KAAK,QACLC,YAAY,QACZX,MAAOV,IAEP,2BAAOiB,QAAQ,WAAf,WACA,2BACAC,SAAUX,KAAKJ,cACfgB,UAAU,UACVlB,KAAK,UACLmB,KAAK,WACLC,YAAY,UACZX,MAAOR,KAGP,4BAAQkB,KAAK,UAAb,mB,GAzEOE,aC9BRC,MAXf,WACE,OACE,yBAAKJ,UAAU,OACb,4BAAQA,UAAU,cACjB,0CACA,kBAAC,EAAD,SCHPK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9b5e7ad7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n/* AS A FUNCTIONAL COMPONENT*/\nimport axios from 'axios';\n\n\n\nconst StyledMailForm = styled.form`\n    background: grey;\n    width: 100%;\n    height: 100%;\n    display: grid;\n        fieldset {\n            margin: auto;\n            display: grid;\n            grid-template-columns: 1fr;\n            grid-template-rows: repeat(4, 1fr);\n            width: 80%;\n        }\n        & input {\n            width: 100%;\n            height: 5vh;\n            &.name {\n                font-size: 2rem;\n            }\n            &.email {\n                font-size: 1.8rem;\n            }\n            &.message {\n                height: 15vh;\n                font-size: 2rem;\n            }\n        }\n    & button {\n        width: 22vw;\n        height: 3vh;\n        margin: auto;\n        background: #269e6c;\n        color: #fff;\n        font-size: 0.8rem;\n    }\n`;\n\n\n    // const MailForm =  () => {\nclass MailForm extends Component{        \nconstructor(props) {\n    super(props);\n    this.state = {\n        email: \"\",\n        name: \"\",\n        message: \"\"\n    }\n    this.changeHandler = this.changeHandler.bind(this);\n    this.submitHandler = this.submitHandler.bind(this);\n}\n\nchangeHandler(e) {\n    this.setState({[e.target.name]: e.target.value})\n}\n\n    async submitHandler(e) {\n        e.preventDefault();\n        const { email, name, message } = this.state;\n        // console.log(`\n        // {name: ${name},\n        // email: ${email},\n        // msg: ${message}}`)\n        // console.log(\"state:\", this.state);\n        try {\n            // eslint-disable-next-line \n            const form = await axios.post(\"/api/form\",\n                {\n                    name,\n                    email,\n                    message\n                }\n            )\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n       render() {\n           const {email, name, message} = this.state;\n           return (\n               <StyledMailForm onSubmit={this.submitHandler} >\n            <fieldset>\n                <legend>Test Mail Form</legend>\n                <label htmlFor=\"name\">name</label>\n                <input\n                onChange={this.changeHandler}\n                className=\"name\"\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"name\"\n                value={name}\n                />\n                <label htmlFor=\"email\">email</label>\n                <input\n                onChange={this.changeHandler}\n                className=\"email\"\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"email\"\n                value={email}\n                />\n                <label htmlFor=\"message\">message</label>\n                <input\n                onChange={this.changeHandler}\n                className=\"message\"\n                name=\"message\"\n                type=\"textarea\"\n                placeholder=\"message\"\n                value={message}\n                />\n                </fieldset>\n                <button type=\"submit\">Send Email</button>\n\n               \n            </StyledMailForm>\n        )\n    }\n}\n\n\nexport default MailForm;\n","import React from 'react';\nimport './App.css';\nimport MailForm from './subcomponents/MailForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       <h1>Contact Us</h1>\n       <MailForm/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}